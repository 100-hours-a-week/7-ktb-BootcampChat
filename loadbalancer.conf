# 🚀 HAProxy 극한 성능 로드밸런서 설정
global
    maxconn 100000          # 10만 동시 연결
    nbthread 4              # 4개 스레드 (t3.small 2 vCPU × 2)
    tune.ssl.default-dh-param 2048
    
defaults
    mode http
    timeout connect 1s      # 빠른 연결
    timeout client 10s      # 클라이언트 타임아웃
    timeout server 5s       # 서버 타임아웃
    option httplog
    option dontlognull
    option redispatch       # 서버 장애시 재분배
    retries 2               # 2번 재시도
    maxconn 50000          # 기본 최대 연결

# 🖥️ 백엔드 서버 풀 (15개 인스턴스)
backend chat_backend
    balance roundrobin      # 라운드로빈 분산
    option httpchk GET /api/health  # 헬스체크
    
    # 15개 백엔드 서버 (각각 t3.small)
    server backend01 10.0.1.10:5000 check maxconn 3000
    server backend02 10.0.1.11:5000 check maxconn 3000
    server backend03 10.0.1.12:5000 check maxconn 3000
    server backend04 10.0.1.13:5000 check maxconn 3000
    server backend05 10.0.1.14:5000 check maxconn 3000
    server backend06 10.0.1.15:5000 check maxconn 3000
    server backend07 10.0.1.16:5000 check maxconn 3000
    server backend08 10.0.1.17:5000 check maxconn 3000
    server backend09 10.0.1.18:5000 check maxconn 3000
    server backend10 10.0.1.19:5000 check maxconn 3000
    server backend11 10.0.1.20:5000 check maxconn 3000
    server backend12 10.0.1.21:5000 check maxconn 3000
    server backend13 10.0.1.22:5000 check maxconn 3000
    server backend14 10.0.1.23:5000 check maxconn 3000
    server backend15 10.0.1.24:5000 check maxconn 3000

# 🌐 프론트엔드 설정
frontend chat_frontend
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/chat.pem
    redirect scheme https if !{ ssl_fc }
    
    # 🚀 성능 최적화
    option httplog
    option forwardfor
    
    # API 요청 분산
    acl is_api path_beg /api
    use_backend chat_backend if is_api
    
    # WebSocket 연결 (Sticky Session)
    acl is_websocket hdr(Upgrade) -i websocket
    use_backend chat_backend if is_websocket

# 📊 통계 페이지
listen stats
    bind *:8080
    stats enable
    stats uri /stats
    stats refresh 10s 